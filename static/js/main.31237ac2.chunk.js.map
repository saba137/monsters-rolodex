{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","e","target","value","App","setState","searchField","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","console","log","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,EAAO,SAAAC,GAChB,OACI,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAM,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACxB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJjBC,G,MAAW,SAAAR,GAEhB,OACG,qBAAKC,UAAY,YAAjB,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAG,cAAC,EAAD,CAAyBA,QAASA,GAArBA,EAAQC,WCJrDM,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,aACpC,OAAO,uBACPZ,UAAY,SACZa,KAAM,SACNF,YAAeA,EACfG,SAAU,SAACC,GAAD,OAAKH,EAAaG,EAAEC,OAAOC,YCmC1BC,G,wDApCb,aAAc,IAAD,8BACX,gBAQJN,aAAa,SAACK,GACX,EAAKE,SAAS,CAACC,YAAYH,KAP5B,EAAKI,MAAQ,CACXb,SAAU,GACVY,YAAa,KALF,E,qDAYX,WAAoB,IAAD,OACjBE,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKP,SAAS,CAACX,SAASkB,S,oBAE3C,WAAS,IAAD,EAC0BC,KAAKN,MAA9Bb,EADD,EACCA,SAAUY,EADX,EACWA,YACXQ,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASX,EAAYU,kBAEpD,OADIE,QAAQC,IAAIL,EAAkBR,GAEhC,sBAAKpB,UAAU,MAAf,UACE,oBAAIA,UAAY,OAAhB,8BACA,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAce,KAAKf,eACnB,uBAEA,cAAC,EAAD,CAAUJ,SAAYoB,W,GAhCVM,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,CAAkB7C,WAAS,EAA3B,SACE,cAAC,EAAD,MAEF8C,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.31237ac2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './card.styles.css';\r\nexport const Card = props =>{\r\n    return(\r\n        <div className = \"card-container\">\r\n            <img alt = \"monster\" src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n            <h1>{props.monster.name}</h1>\r\n            <p>{props.monster.email}</p>\r\n            </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\nexport const CardList = props => {\r\n    \r\n        return ( \r\n           <div className = 'card-list'>\r\n               {props.monsters.map(monster=>(<Card key = {monster.id} monster={monster} />))}\r\n            \r\n            </div>\r\n         );\r\n    }\r\n\r\n \r\n","import React, { Component } from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) =>{\r\n    return(<input \r\n    className = \"search\" \r\n    type ='search' \r\n    placeholder = {placeholder}  \r\n    onChange={(e)=>handleChange(e.target.value)}\r\n      \r\n      />\r\n    )\r\n}","import React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component{\n\n  constructor(){\n    super();\n\n  this.state = {\n    monsters: [],\n    searchField: ' '\n  };\n  //this.handleChange = this.handleChange.bind(this);\n}\nhandleChange=(value)=>{\n   this.setState({searchField:value});\n}\n    componentDidMount(){\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters:users}));\n    }\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n      console.log(filteredMonsters, searchField);\n  return (\n    <div className=\"App\">\n      <h1 className = \"name\">Monsters Rolodex</h1>\n      <SearchBox \n      placeholder=\"search monsters\" \n      handleChange={this.handleChange}/>\n      <br></br>\n  \n      <CardList monsters = {filteredMonsters} />\n   </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode className >\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}